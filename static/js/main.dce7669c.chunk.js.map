{"version":3,"sources":["components/layout/Header.js","components/pages/About.js","context.js","components/debtors/Debtor.js","components/debtors/Debtors.js","components/layout/TextInputGroup.js","components/debtors/AddDebtor.js","components/debtors/EditDebtor.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","href","to","defaultProps","About","Context","React","createContext","reducer","state","action","type","debtors","filter","debtor","id","payload","map","Provider","dispatch","setState","axios","get","response","this","data","value","children","Component","Consumer","Debtor","showDebtorInfo","onShowClick","e","onDeleteClick","a","delete","name","email","phone","onClick","style","cursor","bind","float","color","marginRight","Debtors","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddDebtor","errors","target","onSubmit","preventDefault","newDebtor","uuidv4","post","history","push","EditDebtor","updatedDebtor","match","params","put","NotFound","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.dce7669c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n\tconst { branding } = props;\n\treturn (\n\t\t<nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<a href=\"/\" className=\"navbar-brand\">{branding}</a>\n\t\t\t\t<div>\n\t\t\t\t\t<ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i> Home</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/debtor/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i> Add</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i> About</Link>\n            </li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</nav>\n\t);\n}\n\nHeader.defaultProps = {\n\tbranding: 'My App'\n}\n\nHeader.propTypes = {\n\tbranding: PropTypes.string.isRequired\n}\n\nexport default Header;\n","import React from 'react';\n\nconst About = (props) => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Debtor Manager</h1>\n      <p className=\"lead\">Simple app to manage debtors</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n}\n\nexport default About;\n","import React, { Component } from 'react'\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_DEBTOR':\n      return {\n        ...state, \n        debtors: state.debtors.filter(debtor => debtor.id !== action.payload)\n      }; \n    case 'ADD_DEBTOR':\n      return {\n        ...state, \n        debtors: [action.payload, ...state.debtors]\n      };\n    case 'UPDATE_DEBTOR':\n      return {\n        ...state, \n        debtors: state.debtors.map(\n          debtor => \n            debtor.id === action.payload.id ? (debtor = action.payload) : debtor\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    debtors: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  }\n  \n  async componentDidMount() {\n    const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({\n      debtors: response.data\n    });\n  }\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, {Component} from \"react\";\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\n\nclass Debtor extends Component {\n  state = {\n    showDebtorInfo: false\n  };\n\n  onShowClick = e => {\n    this.setState({showDebtorInfo: !this.state.showDebtorInfo});\n  }\n\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({type: 'DELETE_DEBTOR', payload: id});\n  }\n\n  render() {\n\t\tconst { id, name, email, phone } = this.props.debtor;\n    const { showDebtorInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>{name} \n                <i onClick={this.onShowClick} className=\"fas fa-sort-down\" style={{cursor: 'pointer'}} /> \n                <i onClick={this.onDeleteClick.bind(this, id, dispatch)} className=\"fas fa-times\" \n                  style={{cursor: 'pointer', float: 'right', color: 'red'}} />\n                <Link to={`debtor/edit/${id}`}>\n                  <i className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '1rem'\n                    }}></i>\n                </Link>\n              </h4>\n              {showDebtorInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          )     \n        }}\n      </Consumer>\n    );\n  }\n}\n\nDebtor.propTypes = {\n\tdebtor: PropTypes.object.isRequired\n}\n\nexport default Debtor;\n","import React, {Component} from \"react\";\nimport Debtor from './Debtor';\nimport { Consumer } from '../../context';\n\nclass Debtors extends Component {\n  \n\trender() {\n    return (\n      <Consumer>\n        {value => {\n          const { debtors } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Debtor </span>List\n              </h1>\n              {debtors.map(debtor => (\n                <Debtor \n                  key={debtor.id}\n                  debtor={debtor} \n                />\n              ))}\t\t\n            </React.Fragment>       \n          )\n        }}\n      </Consumer>\n    )\n\n\n\t}\n}\n\nexport default Debtors;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = (props) => {\n  const { label, name, value, placeholder, type, onChange, error } = props;\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input \n        className={\n          classnames(\n            'form-control form-control-lg', \n            {\n              'is-invalid': error\n            }\n        )}\n        type={type}\n        placeholder={placeholder}\n        name={name}\n        value={value}\n        onChange={onChange}/>    \n      {error && <div className=\"invalid-feedback\">\n        {error}\n      </div>} \n    </div>\n  );\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n}\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired, \n  name: PropTypes.string.isRequired, \n  value: PropTypes.string.isRequired, \n  placeholder: PropTypes.string.isRequired, \n  type: PropTypes.string.isRequired, \n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n}\n\nexport default TextInputGroup;\n","import React, {Component} from \"react\";\nimport axios from 'axios';\nimport { Consumer } from '../../context';\nimport { v4 as uuidv4 } from 'uuid';\nimport TextInputGroup from '../layout/TextInputGroup';\n\nclass AddDebtor extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }  \n  \n  onChange = e => this.setState({ [e.target.name]: e.target.value });    \n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    //Check for errors\n    if (name === '') {\n      this.setState({\n        errors: {\n          name: 'Name is required'\n        }\n      })\n      return;\n    }\n\n    if (email === '') {\n      this.setState({\n        errors: {\n          email: 'Email is required'\n        }\n      })\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({\n        errors: {\n          phone: 'Phone is required'\n        }\n      })\n      return;\n    }\n\n    const newDebtor = {\n      id: uuidv4(),\n      name,\n      email,\n      phone\n    };\n\n    const response = await axios.post('https://jsonplaceholder.typicode.com/users/', newDebtor);\n    dispatch({type: 'ADD_DEBTOR', payload: response.data});\n\n    //Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n\n  }\n\n  render() {\n    const { name, email, phone, errors } = this.state;    \n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">\n                Add Debtor\n              </div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup \n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup \n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    type=\"email\"\n                    error={errors.email}\n                  />\n                  <TextInputGroup \n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input className=\"btn btn-light btn-block\" type=\"submit\" \n                    value=\"Add Debtor\" />\n                </form>\n              </div>\n            </div>      \n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddDebtor;\n","import React, {Component} from \"react\";\nimport axios from 'axios';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\n\nclass EditDebtor extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }  \n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n    const debtor = response.data;\n    this.setState({\n      name: debtor.name,\n      email: debtor.email,\n      phone: debtor.phone\n    })\n  }\n  onChange = e => this.setState({ [e.target.name]: e.target.value });    \n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    //Check for errors\n    if (name === '') {\n      this.setState({\n        errors: {\n          name: 'Name is required'\n        }\n      })\n      return;\n    }\n\n    if (email === '') {\n      this.setState({\n        errors: {\n          email: 'Email is required'\n        }\n      })\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({\n        errors: {\n          phone: 'Phone is required'\n        }\n      })\n      return;\n    }\n\n    const updatedDebtor = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n\n    const response = \n      await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,\n          updatedDebtor);\n\n    dispatch({type: 'UPDATE_DEBTOR', payload: response.data})\n\n    //Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n\n  }\n\n  render() {\n    const { name, email, phone, errors } = this.state;    \n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">\n                Edit Debtor\n              </div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup \n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup \n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    type=\"email\"\n                    error={errors.email}\n                  />\n                  <TextInputGroup \n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input className=\"btn btn-light btn-block\" type=\"submit\" \n                    value=\"Update Debtor\" />\n                </form>\n              </div>\n            </div>      \n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default EditDebtor;\n","import React from 'react';\n\nconst NotFound = (props) => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/layout/Header\";\nimport About from './components/pages/About';\nimport Debtors from \"./components/debtors/Debtors\";\nimport AddDebtor from \"./components/debtors/AddDebtor\";\nimport EditDebtor from './components/debtors/EditDebtor';\n\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport NotFound from \"./components/pages/NotFound\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Debtor Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Debtors} /> \n                <Route exact path=\"/debtor/add\" component={AddDebtor} />\n                <Route exact path=\"/debtor/edit/:id\" component={EditDebtor} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}